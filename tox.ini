[tox]
envlist = py{310,311,312,313}-{unit,integration}
isolated_build = true
skip_missing_interpreters = true

[testenv]
# Skip deps installation for these environments - we'll use make commands
skip_install = true
deps =
    uv
# Set environment variables
setenv =
    LANGFLOW_DATABASE_URL = sqlite:///:memory:
    LANGFLOW_CACHE_TYPE = memory
    # Disable telemetry in tests
    LANGFLOW_DO_NOT_TRACK = true
    # Set test environment
    ENVIRONMENT = test
allowlist_externals =
    uv
    make
# Change directory to project root for consistent path handling
changedir = {toxinidir}
# Install project using make command (this handles all dependencies properly)
commands_pre =
    make install_backend

[testenv:py{310,311,312,313}-unit]
description = Run unit tests with Python {envname}
commands =
    make unit_tests args="--cov --cov-report=term --cov-report=html:{envtmpdir}/htmlcov {posargs}"

[testenv:py{310,311,312,313}-integration]
description = Run integration tests without API keys with Python {envname}
commands =
    make integration_tests_no_api_keys args="{posargs}"

[testenv:py{310,311,312,313}-integration-api]
description = Run integration tests with API keys with Python {envname}
commands =
    make integration_tests_api_keys args="{posargs}"

[testenv:py{310,311,312,313}-mcp]
description = Run MCP memory leak tests specifically with Python {envname}
commands =
    uv run pytest src/backend/tests/integration/components/mcp/test_mcp_memory_leak.py \
        --instafail -ra -m "not api_key_required" \
        --timeout=60 -v \
        {posargs}

[testenv:py{310,311,312,313}-all]
description = Run all tests (unit + integration without API keys) with Python {envname}
commands =
    make unit_tests
    make integration_tests_no_api_keys

[testenv:lint]
description = Run linting and type checking
skip_install = true
deps =
    uv
allowlist_externals = make
commands_pre =
    make install_backend
commands =
    make lint

[testenv:format]
description = Format code with ruff
skip_install = true
deps =
    uv
allowlist_externals = make
commands_pre =
    make install_backend
commands =
    make format

[testenv:coverage]
description = Generate test coverage report
skip_install = true
deps =
    uv
allowlist_externals = make
commands_pre =
    make install_backend
commands =
    make coverage

# Quick test environments for specific Python versions
[testenv:py310]
description = Run all tests with Python 3.10
basepython = python3.10
skip_install = true
deps = uv
allowlist_externals = make
commands_pre = make install_backend
commands =
    make unit_tests
    make integration_tests_no_api_keys

[testenv:py311]
description = Run all tests with Python 3.11
basepython = python3.11
skip_install = true
deps = uv
allowlist_externals = make
commands_pre = make install_backend
commands =
    make unit_tests
    make integration_tests_no_api_keys

[testenv:py312]
description = Run all tests with Python 3.12
basepython = python3.12
skip_install = true
deps = uv
allowlist_externals = make
commands_pre = make install_backend
commands =
    make unit_tests
    make integration_tests_no_api_keys

[testenv:py313]
description = Run all tests with Python 3.13
basepython = python3.13
skip_install = true
deps = uv
allowlist_externals = make
commands_pre = make install_backend
commands =
    make unit_tests
    make integration_tests_no_api_keys

[gh-actions]
# Map GitHub Actions Python versions to tox environments
python =
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313